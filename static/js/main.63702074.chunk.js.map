{"version":3,"sources":["Home/image.png","Home/image2.png","Home/index.js","Split/index.js","Vert/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","Link","to","src","image2","image","Component","PAGES","home","planning","purchasing","production","harvest","integration","analytics","Planning","Purchasing","Production","Integration","Harvest","Analytics","Split","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","page","_this2","event","preventDefault","setState","content","Split_Home","Split_Planning","Split_Production","Split_Purchasing","Split_Harvest","Split_Analytics","Split_Integration","reactstrap_es","color","light","expand","onClick","onChangePage","href","navbar","active","Vert","undefined","style","width","vertical","isOpen","direction","tag","right","header","divider","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63702074.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.2f204b56.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.437eebf7.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport image from './image.png';\nimport image2 from './image2.png';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Menu Examples</h1>\n\n                <Link to=\"/split\">\n                    <h2>Unique SubPages</h2>\n                </Link>\n                <p>\n                    Based on the BBC style of navigation.\n                    This creates a new page for every \"Section\"(Planning, Harvest, ...),\n                    but allows for better information density and extra details around usage of pages and dependencies\n                </p>\n\n                <Link to=\"/vert\">\n                    <h2>Vertical Nav</h2>\n                </Link>\n                <p>\n                    Move the Nav bar to the left so it can display lots of options in a small area.\n                </p>\n\n                <h2>\n                    The Problem\n                </h2>\n                <p>\n                    The Row and Perm crops sites are very flat, there is no structure that can get people to a sub page.\n                </p>\n                <img src={image2}/>\n                <p>\n                    Improving the structure to be tiered would make the navigation options more flexible.\n                </p>\n                <img src={image}/>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink } from 'reactstrap';\n\nconst PAGES = {\n    home: 'home',\n    planning: 'planning',\n    purchasing: 'purchasing',\n    production: 'production',\n    harvest: 'harvest',\n    integration: 'integration',\n    analytics: 'analytics',\n};\n\nconst Home = () => (\n    <div>\n        <p>Dashboard</p>\n    </div>\n);\n\nconst Planning = () => (\n    <div>\n        <h1>Planning</h1>\n        <h2>Templates</h2>\n        <p>Describe what a template is</p>\n        <ul>\n            <li>Activity Templates</li>\n            <li>Revenue Deductions</li>\n            <li>Revenue Deduction Templates</li>\n            <li>Transport Costs</li>\n            <li>Transport Cost Templates</li>\n        </ul>\n        <h2>Plans</h2>\n        <p>Describe what a plan is</p>\n        <ul>\n            <li>Plan 1 </li>\n            <li>Plan 2 </li>\n            <li>Plan 3 </li>\n        </ul>\n        <h2>Budgets</h2>\n        <p>Describe what a Budget is</p>\n        <ul>\n            <li>Budget 1 </li>\n            <li>Budget 2 </li>\n            <li>Budget 3 </li>\n        </ul>\n        <h2>Actuals</h2>\n        <p>Describe what an Actual is</p>\n        <ul>\n            <li>Actual 1 </li>\n            <li>Actual 2 </li>\n            <li>Actual 3 </li>\n        </ul>\n        <h2>Reports</h2>\n        <h3>Field Plan</h3>\n        <ul>\n            <li>Report 1 </li>\n            <li>Report 2 </li>\n            <li>Report 3 </li>\n        </ul>\n        <h3>Budget Plan</h3>\n        <ul>\n            <li>Report 1 </li>\n            <li>Report 2 </li>\n            <li>Report 3 </li>\n        </ul>\n        <h3>Actuals Plan</h3>\n        <ul>\n            <li>Report 1 </li>\n            <li>Report 2 </li>\n            <li>Report 3 </li>\n        </ul>\n    </div>\n);\n\nconst Purchasing = () => (\n    <div>\n        Purchasing\n    </div>\n);\n\nconst Production = () => (\n    <div>\n        Production\n    </div>\n);\n\nconst Integration = () => (\n    <div>\n        Integration\n    </div>\n);\n\nconst Harvest = () => (\n    <div>\n        Harvest\n    </div>\n);\n\nconst Analytics = () => (\n    <div>\n        Analytics\n    </div>\n);\n\nclass Split extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            currentPage: PAGES.home,\n        };\n    }\n\n    onChangePage( page ) {\n        return ( event ) => {\n            event.preventDefault();\n\n            this.setState( {\n                currentPage: page,\n            } )\n        }\n    }\n\n    render() {\n        let content;\n        switch ( this.state.currentPage ) {\n            case PAGES.home:\n                content = <Home/>;\n                break;\n            case PAGES.planning:\n                content = <Planning/>;\n                break;\n            case PAGES.production:\n                content = <Production/>;\n                break;\n            case PAGES.purchasing:\n                content = <Purchasing/>;\n                break;\n            case PAGES.harvest:\n                content = <Harvest/>;\n                break;\n            case PAGES.analytics:\n                content = <Analytics/>;\n                break;\n            case PAGES.integration:\n                content = <Integration/>;\n                break;\n        }\n\n        return (\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand onClick={this.onChangePage( PAGES.home )} href=\"/\">Conservis</NavbarBrand>\n                    <Nav className=\"ml-6\" navbar>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.planning}\n                                onClick={this.onChangePage( PAGES.planning )}\n                            >Planning</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.purchasing}\n                                onClick={this.onChangePage( PAGES.purchasing )}\n                            >Purchasing</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.production}\n                                onClick={this.onChangePage( PAGES.production )}\n                            >Production</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.harvest}\n                                onClick={this.onChangePage( PAGES.harvest )}\n                            >Harvest</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.integration}\n                                onClick={this.onChangePage( PAGES.integration )}\n                            >Integration</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                active={this.state.currentPage === PAGES.analytics}\n                                onClick={this.onChangePage( PAGES.analytics )}\n                            >Analytics</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default Split;\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    ListGroup,\n    ListGroupItem,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown\n} from 'reactstrap';\n\nconst PAGES = {\n    home: 'home',\n    planning: 'planning',\n    purchasing: 'purchasing',\n    production: 'production',\n    harvest: 'harvest',\n    integration: 'integration',\n    analytics: 'analytics',\n};\n\nclass Vert extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            currentPage: PAGES.home,\n        };\n    }\n\n    onChangePage( page ) {\n        return ( event ) => {\n            event.preventDefault();\n\n            this.setState( {\n                currentPage: this.state.currentPage === page ? undefined : page,\n            } )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div style={{ width: '150px' }}>\n                    <Navbar className=\"d-block\" color=\"light\" light expand=\"md\">\n                        <NavbarBrand onClick={this.onChangePage( PAGES.home )} href=\"/\">Conservis</NavbarBrand>\n                        <Nav vertical navbar>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.home}\n                                    onClick={this.onChangePage( PAGES.home )}\n                                >Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.planning}\n                                    onClick={this.onChangePage( PAGES.planning )}\n                                >Planning</NavLink>\n                                <Collapse isOpen={this.state.currentPage === PAGES.planning}>\n                                    <ListGroup>\n                                        <ListGroupItem>\n                                            Templates\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Plans\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Budgets\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            <UncontrolledDropdown\n                                                direction=\"right\"\n                                            >\n                                                <DropdownToggle\n                                                    tag=\"span\"\n                                                >\n                                                    Reports\n                                                </DropdownToggle>\n                                                <DropdownMenu right>\n                                                    <DropdownItem header={true}>\n                                                        Report Group 1\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 1\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 2\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 3\n                                                    </DropdownItem>\n                                                    <DropdownItem divider={true}/>\n                                                    <DropdownItem header={true}>\n                                                        Report Group 2\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 1\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 2\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        Report 3\n                                                    </DropdownItem>\n                                                </DropdownMenu>\n                                            </UncontrolledDropdown>\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </Collapse>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.purchasing}\n                                    onClick={this.onChangePage( PAGES.purchasing )}\n                                >Purchasing</NavLink>\n                                <Collapse isOpen={this.state.currentPage === PAGES.purchasing}>\n                                    <ListGroup>\n                                        <ListGroupItem>\n                                            Templates\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Plans\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Budgets\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Reports\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </Collapse>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.production}\n                                    onClick={this.onChangePage( PAGES.production )}\n                                >Production</NavLink>\n                                <Collapse isOpen={this.state.currentPage === PAGES.production}>\n                                    <ListGroup>\n                                        <ListGroupItem>\n                                            Templates\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Plans\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Budgets\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Reports\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </Collapse>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.harvest}\n                                    onClick={this.onChangePage( PAGES.harvest )}\n                                >Harvest</NavLink>\n                                <Collapse isOpen={this.state.currentPage === PAGES.harvest}>\n                                    <ListGroup>\n                                        <ListGroupItem>\n                                            Templates\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Plans\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Budgets\n                                        </ListGroupItem>\n                                        <ListGroupItem>\n                                            Reports\n                                        </ListGroupItem>\n                                    </ListGroup>\n                                </Collapse>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.integration}\n                                    onClick={this.onChangePage( PAGES.integration )}\n                                >Integration</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    active={this.state.currentPage === PAGES.analytics}\n                                    onClick={this.onChangePage( PAGES.analytics )}\n                                >Analytics</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar>\n                </div>\n                <div className=\"col\">\n                    Content\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Vert;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Split from \"./Split\";\nimport Vert from \"./Vert\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/split\" component={Split}/>\n                    <Route exact path=\"/vert\" component={Vert}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}